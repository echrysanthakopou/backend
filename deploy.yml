---
  - name: "Playing with Ansible and Git"
    hosts: localhost
    connection: local 


#     - name: ensure repository key is installed
#       apt_key:
#         url: https://download.docker.com/linux/ubuntu/gpg
#         state: present

#     - name: ensure docker registry is available
#       apt_repository: repo='deb https://download.docker.com/linux/ubuntu bionic stable' state=present

#     - name: ensure docker and dependencies are installed
#       apt: name=docker-ce update_cache=yes

#     # Uncomment the following to enable insecure registries with Docker
#     #- name: ensure docker can use insecure registries in 10.11.0.0/16
#     #  lineinfile: "dest=/etc/default/docker regexp=^DOCKER_OPTS line=DOCKER_OPTS='--insecure-registry 10.11.0.0/16'"

#     - service: name=docker state=restarted
    
    tasks:

    - name: "jDownload my sql docker"
      shell: "docker pull mysql/mysql-server:8.0"
      register: "output"

#     - name: "Remove running mysql"
#       shell: "docker rm -f mysql-docker"
#       register: "output"

#     - name: "Run mysql docker"
#       shell: "docker run --name=mysql-docker -p 3306:3306 -e MYSQL_ROOT_HOST='%' -e MYSQL_ROOT_PASSWORD=HarrisHarris1 -e MYSQL_DATABASE=mydb1 -d mysql/mysql-server:8.0 "
#       register: "output"

#     - name: "pull backend docker"
#       shell: "docker pull echrysanthakopou/back:1_0_0"
#       register: "output"

    - name: "remove previous docker "
      shell: "docker rm -f back"
      register: "output"

    - name: "wait for db to initialize"
      shell: "sleep 200; "
      register: "output"    

    - name: "deploy"
      shell: " docker run --name=back --net=host  -p 8082:8082  -d=true echrysanthakopou/back:1_0_0 "
      register: "output"      


    - name: "jDownload my mailhog docker"
      shell: "docker pull mailhog/mailhog"
      register: "output"

    - name: "jDownload my mailhog docker"
      shell: "docker rm -f mailhog"
      register: "output"

    - name: "Run mailhog docker"
      shell: " docker run -d=true --name=mailhog  -p 8025:8025 -p 1025:1025 mailhog/mailhog  "
      register: "output"

    - name: "wait for docker to initialize"
      shell: "sleep 60; "
      register: "output"   
    - debug: var=output.stdout_lines
